#!/bin/bash
# postinst script for astroberry64-server-wui

# set password for x11vnc remote desktop
if [ "$1" = "configure" ] && [ ! -d /etc/x11vnc ]; then
    mkdir -p /etc/x11vnc
fi
if [ "$1" = "configure" ] && [ ! -e /etc/x11vnc/passwd ]; then
    x11vnc -storepasswd astrober /etc/x11vnc/passwd
fi

# configure lightdm for X11 (required for VNC screen sharing)
if [ "$1" = "configure" ] && [ -e /etc/lightdm/lightdm.conf ]; then
    sed -i 's/^user-session=.*/user-session=rpd-x/' /etc/lightdm/lightdm.conf
    sed -i 's/^autologin-session=.*/autologin-session=rpd-x/' /etc/lightdm/lightdm.conf
fi

# disable RealVNC if present (incompatible with noVNC)
if [ "$1" = "configure" ] && [ -n "$(systemctl list-unit-files | grep vncserver-x11-serviced)" ]; then
    systemctl stop vncserver-x11-serviced.service 2>/dev/null || true
    systemctl disable vncserver-x11-serviced.service 2>/dev/null || true
fi

# set log directory access rights
if [ "$1" = "configure" ] && [ ! -d /var/log/astroberry ] && [ -n "$(cut -d: -f1 /etc/passwd | grep '^astroberry$')" ]; then
	mkdir /var/log/astroberry
	chmod 750 /var/log/astroberry
	chown astroberry:adm /var/log/astroberry
fi

# add required python packages
if [ "$1" = "configure" ] && [ -n "$(which pip3)" ] && [ -z "$(pip3 list | grep gps3)" ]; then
	pip3 install --no-warn-script-location gps3
fi
if [ "$1" = "configure" ] && [ -n "$(which pip3)" ] && [ -z "$(pip3 list | grep python-socketio)" ]; then
        pip3 install --no-warn-script-location python-socketio
fi
if [ "$1" = "configure" ] && [ -n "$(which pip3)" ] && [ -z "$(pip3 list | grep ephem)" ]; then
        pip3 install --no-warn-script-location ephem
fi

# create symbolic links
if [ "$1" = "configure" ] && [ ! -e /etc/nginx/sites-enabled/astroberry ] && [ -e /etc/nginx/sites-available/astroberry ]; then
	ln -sf /etc/nginx/sites-available/astroberry /etc/nginx/sites-enabled/
fi
if [ "$1" = "configure" ] && [ ! -e /etc/nginx/sites-enabled/astroberry_ssl ] && [ -e /etc/nginx/sites-available/astroberry_ssl ]; then
	ln -sf /etc/nginx/sites-available/astroberry_ssl /etc/nginx/sites-enabled/
fi

# remove default site for nginx
if [ "$1" = "configure" ] && [ -e /etc/nginx/sites-enabled/default ]; then
	rm -rf /etc/nginx/sites-enabled/default
fi

# link astroberry version file
if [ "$1" = "configure" ] && [ ! -e /var/www/html/version.html ] && [ -e /etc/astroberry.version ]; then
	ln -sf /etc/astroberry.version /var/www/html/version.html
fi

if [ "$1" = "configure" ]; then

	# Refresh services files
	systemctl daemon-reload

	# Activate basic services
	systemctl enable x11vnc.service
	systemctl enable gpspanel.service
	systemctl enable astropanel.service
	systemctl enable indiwebmanager.service
	systemctl enable novnc.service
	systemctl enable nginx.service

	# Reload astroberry services
	systemctl restart x11vnc.service
	systemctl restart gpspanel.service
	systemctl restart astropanel.service
	systemctl restart indiwebmanager.service
	systemctl restart novnc.service
	systemctl restart nginx.service

fi
