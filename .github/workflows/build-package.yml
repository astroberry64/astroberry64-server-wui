name: Build Debian Package

on:
  push:
    branches:
      - astroberry64-migration
      - main
  pull_request:
    branches:
      - astroberry64-migration
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64

    - name: Build package in Debian Trixie arm64 container
      run: |
        docker run --rm --platform linux/arm64 \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          debian:trixie-slim \
          bash -c '
            set -e
            export DEBIAN_FRONTEND=noninteractive

            echo "Installing build dependencies..."
            apt-get update
            apt-get install -y debhelper devscripts cdbs cmake build-essential curl

            echo "=== Auto-incrementing build number ==="

            # Get package name from debian/control
            PACKAGE_NAME=$(grep "^Package:" debian/control | head -1 | awk "{print \$2}")
            echo "Package: $PACKAGE_NAME"

            # Get current version from debian/changelog (handles both formats)
            CURRENT_FULL_VERSION=$(dpkg-parsechangelog -S Version)
            echo "Current version in git: $CURRENT_FULL_VERSION"

            # Extract upstream version (works with "2.0.9" OR "2.0.9-astroberry64.10")
            CURRENT_UPSTREAM=$(echo "$CURRENT_FULL_VERSION" | sed "s/-astroberry64\..*//")
            echo "Upstream version: $CURRENT_UPSTREAM"

            # Fetch latest version from astroberry64-repo
            LATEST_REPO_VERSION=$(curl -s "https://astroberry64.github.io/astroberry64-repo/dists/trixie-testing/main/binary-arm64/Packages.gz" | \
              gunzip | \
              awk "/^Package: ${PACKAGE_NAME}\$/,/^Version:/" | \
              grep "^Version:" | \
              head -1 | \
              awk "{print \$2}")

            if [ -z "$LATEST_REPO_VERSION" ]; then
              echo "No previous version found in repo, starting at .1"
              NEW_BUILD=1
            else
              echo "Latest in repo: $LATEST_REPO_VERSION"

              # Parse repo version parts
              REPO_UPSTREAM=$(echo "$LATEST_REPO_VERSION" | sed "s/-astroberry64\..*//")
              REPO_BUILD=$(echo "$LATEST_REPO_VERSION" | grep -oP "astroberry64\.\K\d+" || echo "0")

              # Compare upstream versions
              if [ "$CURRENT_UPSTREAM" != "$REPO_UPSTREAM" ]; then
                echo "Upstream version changed ($REPO_UPSTREAM â†’ $CURRENT_UPSTREAM), resetting build to .1"
                NEW_BUILD=1
              else
                echo "Upstream version unchanged, incrementing build number"
                NEW_BUILD=$((REPO_BUILD + 1))
              fi
            fi

            # Create new version string
            NEW_VERSION="${CURRENT_UPSTREAM}-astroberry64.${NEW_BUILD}"
            echo "New version: $NEW_VERSION"

            # Update debian/changelog (in CI only, not committed back to git)
            export DEBFULLNAME="Astroberry64 CI"
            export DEBEMAIL="ci@astroberry64.github.io"
            dch -b -v "$NEW_VERSION" "Automated build #${NEW_BUILD} from CI"

            echo ""
            echo "Updated debian/changelog (CI ephemeral):"
            head -5 debian/changelog
            echo ""

            echo "=== Building package ==="
            dpkg-buildpackage -b -us -uc

            echo "Moving .deb files to build directory..."
            mkdir -p /workspace/build
            mv ../*.deb /workspace/build/ || true
            mv ../*.buildinfo /workspace/build/ || true
            mv ../*.changes /workspace/build/ || true

            echo "Build artifacts:"
            ls -lh /workspace/build/
          '

    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: debian-packages
        path: build/*.deb
        if-no-files-found: error

    - name: Upload build info
      uses: actions/upload-artifact@v4
      with:
        name: build-info
        path: |
          build/*.buildinfo
          build/*.changes
        if-no-files-found: warn

    - name: Auto-commit to astroberry64-repo (testing suite)
      if: github.ref == 'refs/heads/astroberry64-migration' || github.ref == 'refs/heads/main'
      env:
        GH_TOKEN: ${{ secrets.ASTROBERRY64_REPO_TOKEN }}
      run: |
        # Clone the repo with token authentication
        git clone https://x-access-token:${GH_TOKEN}@github.com/astroberry64/astroberry64-repo.git /tmp/repo
        cd /tmp/repo

        # Configure git
        git config user.name "Astroberry64 Bot"
        git config user.email "bot@astroberry64.github.io"

        # Add package to testing suite
        ./add-package.sh ${{ github.workspace }}/build/*.deb testing

        # Commit and push
        git add dists/trixie-testing pool
        git commit -m "Auto-add $(basename ${{ github.workspace }}/build/*.deb) to testing suite"$'\n\n'"Built from ${{ github.repository }}@${{ github.sha }}"$'\n\n'"ðŸ¤– Automated build via GitHub Actions" || echo "No changes to commit"
        git push origin main || echo "Nothing to push"
